package com.ecb.game.cit.code;

import com.ecb.game.cit.util.StringUtil;


public enum TypeEnum implements NameEnum {
	CHECK_DOWN(0, "狂気度調査", "調査したいプレイヤーに伏せて渡すこと。渡されたプレイヤーは「狂気度カード」＋「探索者カードの狂気度修正」が{0}以下であれば手を上げなければならない。本カードは裏返しのまま捨て札にする。"),
	CHECK_UP(1, "狂気度調査", "調査したいプレイヤーに伏せて渡すこと。渡されたプレイヤーは「狂気度カード」＋「探索者カードの狂気度修正」が{0}以上であれば手を上げなければならない。本カードは裏返しのまま捨て札にする。"),
	ITEM_CHECK(2, "アイテム調査", "任意のプレイヤー1名にクローズドセットされたアイテムカードすべて見ることができる。"),
	ITEM_OPEN(3, "アイテム公開", "任意プレイヤーのクローズドセットされたアイテムを一つオープンにすることができる。"),
	ITEM_MOVE(4, "アイテム移動", "任意プレイヤーにセットされたアイテムを一つ任意のプレイヤーに移動することができる。"),
	ITEM_REMOVE(5, "アイテム破壊", "任意プレイヤーにセットされたアイテムを一つ捨て札にする。その際クローズドセットされていた場合裏返しのまま捨て札にすること。"),
	HONEY(6, "黄金の蜂蜜酒使用", "任意プレイヤーのスキルを、未使用状態の場合は使用状態に、使用状態の場合は未使用状態にする。"),
	DRUG(7, "精神安定剤【薬】", "セットされたプレイヤーの狂気度を-5する。"),
	HI_DRUG(8, "強力精神安定剤【薬】", "セットされたプレイヤーの狂気度を-10する。"),
	BATON(9, "警棒【近接】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+5、邪神陣営だった場合効果なし。"),
	GUN(10, "拳銃【火器】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+10、邪神陣営だった場合効果なし。"),
	FIRE(11, "火炎放射器【火器】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+15、邪神陣営だった場合効果なし。"),
	MACHINE_GUN(12, "マシンガン【火器】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+20、邪神陣営だった場合効果なし。"),
	BIND(13, "拘束具【拘束】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力-10、邪神陣営だった場合邪神降臨判定に-10。"),
	AVON(14, "エイボンの書【書籍】", "狂気度+5、決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+10、邪神陣営だった場合邪神降臨判定に+10。"),
	NO_NAME(15, "無名祭祀書【書籍】", "狂気度+7、決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+14、邪神陣営だった場合邪神降臨判定に+14。"),
	KEY(16, "銀の鍵【鍵】", "狂気度+5、決戦フェーズにおいてセットされた探索者が人類陣営だった場合効果なし、邪神陣営だった場合邪神降臨判定に+20。"),
	NECRONOMICON(17, "ネクロノミコン【書籍】", "狂気度+10、決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+20、邪神陣営だった場合邪神降臨判定に+20。"),
	SIGN(18, "エルダーサイン【印】", "セットされたプレイヤーの狂気度によって戦闘力に以下の補正を与える。0以下：+25、1～20：+15、21～40：+10、41～60：+5、61～80：+0、81～100：-10、100より上：-20。"),
	GUARD(19, "防弾チョッキ【防具】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+5、邪神陣営だった場合効果なし。"),
	ARMOR(20, "バイオアーマー【防具】", "決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+10、邪神陣営だった場合効果なし。"),
	CRYSTAL(21, "輝くトラペゾヘドロン【結晶】", "狂気度+20、決戦フェーズにおいてセットされた探索者が人類陣営だった場合戦闘力+20、邪神陣営だった場合邪神降臨判定に+40。このカードが手札にあるプレイヤーは必ず使用しなければならない。");

	private int id;
	private String name;
	private String template;

	private TypeEnum(int id, String name, String template) {
		this.id = id;
		this.name = name;
		this.template = template;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public String getName() {
		return name;
	}

	public String getTemplate() {
		return template;
	}

	public static TypeEnum getById(int id) {
		for (TypeEnum kind : TypeEnum.values()) {
			if (kind.getId() == id) {
				return kind;
			}
		}
		return null;
	}

	public static String getNameById(int id) {
		for (TypeEnum kind : TypeEnum.values()) {
			if (kind.getId() == id) {
				return kind.getName();
			}
		}
		return StringUtil.EMPTY;
	}
}
